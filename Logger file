// time complexity :O(1)
// space complexity: O(M) : number of incoming meassges: worst case all messgaes are distinct
// brute force: create hashmap: string and timestamp as key value pairs, we check if message already exist in map and and is with 10 timestamps -> return false;
// else we consider it valid message and print it : thus add it into hashmap
class Logger {
    Map<String, Integer> map;
    /** Initialize your data structure here. */
    public Logger() {
        map = new HashMap<>();
    }
    
    /** Returns true if the message should be printed in the given timestamp, otherwise returns false.
        If this method returns false, the message will not be printed.
        The timestamp is in seconds granularity. */
    public boolean shouldPrintMessage(int timestamp, String message) {
        if(map.containsKey(message) && timestamp - map.get(message) < 10)
            return false;
        map.put(message, timestamp);
        return true;
            
    }
}

/**
 * Your Logger object will be instantiated and called as such:
 * Logger obj = new Logger();
 * boolean param_1 = obj.shouldPrintMessage(timestamp,message);
 */
